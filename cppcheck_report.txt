benchmarks/ecs/registry.cpp:52:55: style: Parameter 'state' can be declared with const. However it seems that 'bm_entity_set_component' is a callback function, if 'state' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
static void bm_entity_set_component(benchmark::State& state) {
                                                      ^
benchmarks/ecs/registry.cpp:117:11: note: You might need to cast the function pointer here
BENCHMARK(bm_entity_set_component);
          ^
benchmarks/ecs/registry.cpp:52:55: note: Parameter 'state' can be declared with const
static void bm_entity_set_component(benchmark::State& state) {
                                                      ^
benchmarks/ecs/registry.cpp:60:55: style: Parameter 'state' can be declared with const. However it seems that 'bm_entity_get_component' is a callback function, if 'state' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
static void bm_entity_get_component(benchmark::State& state) {
                                                      ^
benchmarks/ecs/registry.cpp:118:11: note: You might need to cast the function pointer here
BENCHMARK(bm_entity_get_component);
          ^
benchmarks/ecs/registry.cpp:60:55: note: Parameter 'state' can be declared with const
static void bm_entity_get_component(benchmark::State& state) {
                                                      ^
benchmarks/ecs/registry.cpp:8:9: style: struct member 'position::y' is never used. [unusedStructMember]
    int y{};
        ^
benchmarks/ecs/registry.cpp:13:9: style: struct member 'rotation::y' is never used. [unusedStructMember]
    int y{};
        ^
benchmarks/ecs/registry.cpp:18:9: style: struct member 'velocity::y' is never used. [unusedStructMember]
    int y{};
        ^
examples/example1/main.cpp:8:11: style: struct member 'transform::rotation' is never used. [unusedStructMember]
    float rotation[3];
          ^
examples/example1/main.cpp:9:11: style: struct member 'transform::scale' is never used. [unusedStructMember]
    float scale[3];
          ^
tests/ecs/test_registry.cpp:135:14: style: Variable 'set' is assigned a value that is never used. [unreadVariable]
    auto set = ecs::component_set::create<velocity, position, rotation>();
             ^
tests/ecs/test_registry.cpp:244:18: style: Variable 'entity1' is assigned a value that is never used. [unreadVariable]
    auto entity1 = registry.create<position>({ 1, 1 });
                 ^
tests/ecs/test_registry.cpp:245:18: style: Variable 'entity2' is assigned a value that is never used. [unreadVariable]
    auto entity2 = registry.create<position, velocity>({ 2, 2 }, { 22, 22 });
                 ^
benchmarks/ecs/registry.cpp:16:1: error: The one definition rule is violated, different classes/structs have the same name 'velocity' [ctuOneDefinitionRuleViolation]
struct velocity {
^
examples/example1/main.cpp:12:1: note: The one definition rule is violated, different classes/structs have the same name 'velocity'
struct velocity {
^
benchmarks/ecs/registry.cpp:16:1: note: The one definition rule is violated, different classes/structs have the same name 'velocity'
struct velocity {
^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingIncludeSystem]

